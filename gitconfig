[user]
	email = antoni.rosciszewski@gmail.com
	name = Antoni Ro≈õciszewski
[branch]
    autosetupmerge = true
[color]
    branch = auto
    diff = auto
    status = auto
[color "branch"]
    current = yellow reverse
    local = yellow
    remote = green
[color "status"]
    added = yellow
    changed = green
    untracked = cyan
[color]
    ui = true
[core]
    whitespace=fix,-indent-with-non-tab,trailing-space,cr-at-eol
	excludesfile = ~/.gitignore
[alias]
    st = status
    ct = commit
    br = branch
    co = checkout
    rb = rebase
    br = branch
    pl = pull
    pu = push
    di = diff
    cp = cherry-pick
    ad = add
    mt = mergetool
    lg = log --graph --name-status --pretty=oneline
    change-commits = "!f() { VAR=$1; OLD=$2; NEW=$3; shift 3; git filter-branch -f --env-filter \"if [[ \\\"$`echo $VAR`\\\" = '$OLD' ]]; then export $VAR='$NEW'; fi\" $@; }; f "
    squash = "!f(){ git reset --soft HEAD~${1} && git commit --edit -m\"$(git log --format=%B --reverse HEAD..HEAD@{1})\"; };f"
    prevision = "!f() { git checkout `git log --oneline $2 |  awk -v commit="$1" 'FNR == -commit+1 {print $1}'` $2;} ;f"
[push]
	default = matching
; [pull]
    ; rebase = true
