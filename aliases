# -*- shell-script -*-
# vim:set ft=sh textwidth=0 wrapmargin=0:
set +x

# Aliases and custom functions
platform='unknown'
export unamestr=`uname`
if [[ "$unamestr" == 'Darwin' ]]; then
    # Mac OS X-specific
    # bind '"\es": "students\r"'
    # Execute 'g++' command with last argument of previous command
    # bind '"\ee": "g++ !$\r"'
    # bind '"\er": "g++ !$\r ./a.out\r"'
    alias setmiddlevolume='sudo osascript -e "set Volume 5"'
    # alias mvim="/Applications/MacVim.app/contents/MacOS/MacVim"
    alias mvim='/Users/antoni/Developer/mvim'
    alias ctags="`brew --prefix`/bin/ctags"
    alias eclipseclean='/Applications/eclipse/Eclipse.app/Contents/MacOS/eclipse -clean'
    alias topcoder='javaws ~/Developer/Topcoder/ContestAppletProd.jnlp'
    alias copypubkey='xsel --clipboard < id_rsa.pub'
    alias vim='mvim -v'
    alias ls='ls -h -lFG'
elif [[ "$unamestr" == 'Linux' ]]; then
    # Linux specific
    # alias i='sudo apt-get install -y'
    # Install through apt-get and add installed software to list of used commands
    # addcmd() { sudo apt-get install -y $* && echo $* >> ~/install_apt-get.txt; }
    addcmd() { sudo dnf install -y $* && echo $* >> ~/install_apt-get.txt; }

    alias sound='alsamixer'
    alias open='xdg-open'
    alias st='scrot -ub '"'"'%Y:%m:%d:%H:%M:%S.png'"'"' -e '"'"'mv $f ~/Downloads/'"'"
    alias catquestions='cat ~/Documents/Q.txt'
    alias mountrw='mount -o remount,rw /'
    alias vim='vim -o'
    alias ls='ls -h --color -lFG'
fi

# General purpose
alias vimb='vim ~/.bashrc'
alias vima='vim ~/.aliases'
alias vimr='vim ~/.remember'
alias vimexecdwm='sudo vim /usr/local/bin/dwm-personalized'
alias vimv='vim ~/.vimrc'
alias vimq='vim ~/Documents/Q.txt'
alias gq='gedit ~/Documents/Q.txt'
alias vimdwmconfig='vim ~/dwm/config.h'

alias cx='chmod +x'
alias dc='cd'
alias m='man' ; 
alias mm='man $(fc -ln -1 | cut -d" " -f 1)'
alias l='ls'
alias v='vim'
alias grep='grep --color -ni'
alias sudolastcmd='!!' # remember
alias rmf='rm -rf'

alias o='rlwrap ocaml'
alias ioccc='cd ~/Developer/ioccc/'


# System commands
alias free='free -h'

# Current projects
alias wspace='cd ~/workspace/'
alias wgetdir='wget -r --no-parent '
alias zipfolder='tar -czf'

# Programming etc.
alias m='make'
alias c99='gcc -std=c99'
alias g++='g++ -g -Wall -O3'
alias mountstudents='sshfs ar267209@students.mimuw.edu.pl: /Users/antoni/students'
alias students='export TERM=vt100 ; ssh students.mimuw.edu.pl -l ar267209 -t tmux a'
alias icm='ssh antoni@hpc.icm.edu.pl' 
alias icmgw='ssh antoni@gw.icm.edu.pl' 
alias bioex='ssh arosciszewski@bioexploratorium.pl'
#alias wget='curl -0'
alias xcode="open *.xcodeproj"
# It's worth mentioning what the options -czf after tar are for: c indicates that you want to create a tar archive, z applies gzip on the intermediate tar archive, and f is for the subsequent final file name folder_name.tar.gz. – fideli Jul 9 '10 at 19:11
# alias zipfolder='tar -czf folder_name.tar.gz folder_name/'

# SSH
alias sendstud='~/scripts/sendstud.sh'
alias sendicm='~/scripts/sendicm.sh'

# Android development
alias adbd='adb devices'
alias adbreset='adb kill-server;adb start-server'

# Git
alias g='git'
alias gitpu='git pull'
alias gitpua='git push --all -u'
alias gits='git status'
alias gitc='git commit -am'
alias gitca='git commit --amend -m'
alias gitch='git checkout'
alias gitd='git diff'
alias gitm='git merge'
alias gitb='git branch'
alias gitk='gitk --all'
alias gitundocommit='git reset --soft HEAD~1'
alias gd='git diff'

# Set `indent` parameters according to Linux kernel Coding Style
#alias indent='indent -kr -i8'
alias indent='indent -i8 -nbad -bap -nbc -br -brs -c33 -cd33 -ncdb -ce -ci4 -cli0 -d0 -di1 -nfc1 -i4 -ip0 -l75 -lp -npcs -npsl -nsc -nsob'
# Kill all jobs
alias kj='kill -9 $(jobs -p)'

# tmux
alias tm='tmux'
alias tma='tmux attach'
alias tmxa='tmux attach'
alias tmxl='tmux list-window'

# cd directory up
alias ..="cd .."
alias ....="cd ../.."
alias ......="cd ../../.."

# Helper functions
function gg() { pwd > /tmp/last_path; }
function hh() { cd $(cat /tmp/last_path); }

alias webserver='python -m SimpleHTTPServer 8080'
alias gprer='grep -R'

alias hgrep='history | grep -i'

# tmux  && source ~/.paths'
alias gopath="export GOPATH=\$(pwd)"
alias dbgui='/usr/share/dbeaver/dbeaver'

alias singlemonitor='xrandr --output LVDS1'
alias dualmonitor='xrandr --output VGA1 --mode 1920x1200 --right-of LVDS1'
alias dualmonitor2='xrandr --output VGA1 --mode 1680x1050 --right-of LVDS1'
alias dualmonitor_left='xrandr --output VGA1 --mode 1920x1200 --left-of LVDS1'

# Fixing various things on Ubuntu
alias fixaudio='pulseaudio -k' ; alias fixaudio2='pavucontrol'
alias fixaudio3='rm -r ~/.config/pulse; pulseaudio -k'
alias fixpowerctl='for i in /sys/bus/usb/devices/*/power/control; do echo on > $i; done'
alias fixtouchpad='sudo rmmod psmouse && sudo modprobe psmouse'
alias ubuntu_fix_apt='sudo apt-get install --fix-broken && sudo apt-get autoremove && sudo apt-get update'

alias explorer='nautilus --no-desktop'

# Markdown to PDF
md2pdf() {
    pandoc $1 -o $1.pdf
    open $1.pdf
}

# Launches github-flavoured Markdown file on localhost:5000
alias md2html='grip'

# LaTeX
alias latexed1='texmaker'
alias latexed2='gummi'

alias gogo='cd ~/go/'
alias l='ls'
csview() {
    local file="$1"
    cat "$file" | sed -e 's/,,/, ,/g' | column -s, -t | less -#5 -N -S
} 
# Custom cat: colourised and tabulated for CSV files alias cat='pygmentize -g'
xcat() { 
    filename=`basename $1`
    fileext=${filename##*.}
    if [ "$fileext" = "csv" ]; then
        csview $1
    else 
        pygmentize -g $1 
    fi
}

# Google search
s() {
    args=$@
    searchterm=${args// /%20}
    google-chrome-stable "http://www.google.com/search?q=$searchterm"
}

# Launch Vim solarized theme depending on the time of the day
vv() {
    echo $1
    hour=$(date +%H)
    theme=dark
    if [[ $hour -ge 6 && $hour -le 17 ]]; then
        theme=light
    fi
    terminator -l vim-solarized-$theme -c "vim -c 'set gb=$theme'"
}
# Use less +F instead of tail -f
# function tail() {
# if [ "$1" == '-f' ]; then
# shift
# less +F "$@"
# else
# command tail "$@"
# fi
# }
# Display 20 most frequently used commands in Bash
alias mostfrequent='history | cut -d " " -f 4 | tr -c "[:alnum:]" "[\n*]" | sort | uniq -c | sort -nr | head  -20'
# 20 Command Line Tools to Monitor Linux Performance
debug_commands=(ddd kdbg idaq cgdb)
perf_commands=(top vmstat tload stress lsof tcpdump netstat htop atop iotop iostat iptraf iftop monitorix monit arpwatch vnstat dstat nmon collectl dig mpstat, pkill powertop pidstat intel_gpu_top glances pstree nload sysstat sysdig)
hex_editors=(jeex okteta hte bless wxHexEditor dhex)
other_commands=(ruptime rwho)
# Networking
networking_commands=(netstat ethtool ping ifconfig arping traceroute iwconfig ifconfig tshark nethogs nmap nbtscan iptables  tcpdump iproute2 chargen netcat tc insmod fping nslookup host p0f mtr ipcalc sipcalc iperf)
# TODO:
# ps -ef
# tshark -i [interface] -V
# nmap -A <host>
# nbtscan 0.0.0.0/24  This gives IP numbers, NetBios names, Mac addresses from Local Network
# Is that tcp port listening?  nc (netcat) or telnet.
# Is that IP address already used? arping.
# What the %*! is going on? tcpdump.
# What is listening on what ports on this box? netstat.
# ping -f because of the obvious reasons.
# tc is great e.g. for rate limiting / dropping packets on purpose
# insmod dummy for creating dummy network interfaces

whichport() {
    netstat -tulpn | grep $@
}

# ip a s #List addresses for interfaces
# ip link show#List network interfaces
# ip route show #List routing table
# ip neigh Same#Show neighbors
# ip r add default via $ip0#Set default gateway to $ip
# ethtool eth0#Show status of ethernet interface eth0
# ip link set dev eth0 up/down#Bring interface eth0 up (or down)

# iwlist scan#List wireless networks in range

# fping is handy, sends lots of pings without waiting for responses, so you can rapidly ping a whole address range
# ping6 is to ping IPV6 address.

# Same for networking_commands
# random number (array len) to choose random command
alias ftp='filezilla'

# Python modules
alias pi='sudo pip install'
alias piu='sudo pip-review --interactive'
alias pil='pip list'

# Execute nth line of a file
nth() {
    eval `sed $1'q;d' $2`
}

# Countdown, usage: countdown 60, countdown $((2*60*60))
function countdown() {
    date1=$((`date +%s` + $1)); 
    while [ "$date1" -ne `date +%s` ]; do 
        echo -ne "$(date -u --date @$(($date1 - `date +%s`)) +%H:%M:%S)\r";
        sleep 0.1
    done
}
# Stopwach
function stopwatch(){
    date1=`date +%s`; 
    while true; do 
        echo -ne "$(date -u --date @$((`date +%s` - $date1)) +%H:%M:%S)\r"; 
        sleep 0.1
    done
}

function mvd() { mv $1 ~/Downloads/; }

# Utils
# Print primitive data types sizes
alias typesizes='perl -V | grep size='
alias interrupts1='cat /proc/interrupts' # Get processor interrupts
alias memory1='cat /proc/meminfo'
alias disktest='sudo smartctl -a /dev/sda | less'
alias dmesg='dmesg -T'
alias dmesgerrors="dmesg | egrep 'error|fail|bug|rtl8|r8|wlan'"

# TOOD: Check if Debian/Ubuntu
listkernels() {
    dpkg -l 'linux-*' | sed '/^ii/!d;/'"$(uname -r | sed "s/\(.*\)-\([^0-9]\+\)/\1/")"'/d;s/^[^ ]* [^ ]* \([^ ]*\).*/\1/;/[0-9]/!d'
}
alias gdebi='sudo gdebi'

# TODO: PUT THOSE SOMEWHERE
alias irc='hexchat'
alias showdirsizes='du -Pshx * 2>/dev/null'
alias resetsound='pulseaudio -k && sudo alsa force-reload'
alias ns='nvidia-smi'
alias idrsa='cat ~/.ssh/id_rsa.pub'
alias iphone='~/scripts/setup_iphone.sh'
alias i='iphone'
alias pdfmerge='pdfunite'
alias desk='cd ~/Desktop'
alias mountstudents='sudo sshfs -o allow_other ar267209@students.mimuw.edu.pl:/home/students/bioinf/a/ar267209 ~/mount/students/'
alias euler='cd ~/Developer/ProjectEuler/'
alias wallpaperchange='gsettings set org.gnome.desktop.background picture-uri "file:///home/antoni/Documents/wallpaper4.jpg"'
alias showtunnels="sudo lsof -i -n | egrep '\<ssh\>'" # Show all open SSH tunnels
alias j='julia'
# alias yaourt='yaourt --noconfirm --pager'
alias y='yaourt'
alias rsync='rsync --progress'
alias wificonn='sudo wifi-menu wlp2s0'
alias inettest='ping google.com -c 4'
alias install_ycm='~/.vim/bundle/YouCompleteMe/install.sh --clang-completer'

h() {                                                                                                                                              
    head -n $@
}
# TMP
alias ex='vim fun_tree_example.cc'
alias rex='vim ex.cc'
alias sourcea='source ~/.aliases'
alias ycm='cd ~/.vim/bundle/YouCompleteMe/'
alias vimt='vim ~/todo_offline.txt'

rr() {
    echo "Executing test" $1;
    # /usr/bin/g++-4.8 -fdiagnostics-color -std=c++11 fun_tree_test.cc -o test -DTEST_NUM=$1
    /usr/bin/g++-4.8 -std=c++11 fun_tree_test.cc -o test -DTEST_NUM=$1
    ./test;
}

pat() {
    if hash csearch 2>/dev/null; then
        csearch -i $1
    else
        [ ! -z "$2" ] && search_dir="$2" || search_dir="."
        grep -rnw $search_dir -e $1
    fi
}

alias cal='gcalcli'
alias dhcp0='sudo dhcpcd -n eth0'
alias top10size="find . -type f -printf '%s %p\n'| sort -nr | head -10﻿"

dl_website() {
    wget \
        --recursive \
        --no-clobber \
        --page-requisites \
        --html-extension \
        --convert-links \
        --restrict-file-names=windows \
        --no-parent \
        $1
}
alias bl='vim ~/backlog.md'
alias btc-qt='./bitcoin-qt -datadir=/media/antoni/Seagate\ Backup\ Plus\ Drive/.bitcoin'

# cd ../../../
function up() {
    i=$1 
    while [ $i -gt 0 ] 
    do 
        cd .. 
        i=$(($i - 1))
    done 
}

# Current projects
alias its='cd ~/workspace/itstracker/ITSTracker'

# JSON pretty print
alias jsonpp='python -m json.tool'

# Git
function gc() {
    git commit -am "$*"
}

function gcp() {
    gc "$*";
    git push;
}

function command_exists () {
    type "$1" &> /dev/null ;
}

alias find='sudo find'
alias svim='sudo vim'
alias gv='gvim'

# endiannes:
# echo -n I | od -to2 | head -n1 | cut -f2 -d" " | cut -c6 

# Show errno errors
alias showerrors="cpp -dM /usr/include/errno.h | grep 'define E' | sort -n -k 3"

alias sourcetmux='tmux source-file ~/.tmux.conf'
alias p='python'

alias fixandroidstudio='IBUS_ENABLE_SYNC_MODE=1 ibus-daemon -xrd'

diffcount() {
    diff -U 0 $1 $2 | grep -c ^@
}

dark()  { export BACKGROUND=dark && source ~/.common_profile.sh;  }
light() { export BACKGROUND=light && source ~/.common_profile.sh; }

# alias gsa="gnome-screenshot -a"
alias rmcmd='sudo apt-get remove'

alias mergepdf='gs -dBATCH -dNOPAUSE -q -sDEVICE=pdfwrite -sOutputFile=merged.pdf ' # here go the PDF to be merged

alias autoremove='sudo apt-get autoremove'

alias redisgui='redis-desktop-manager'

# Temporary
alias serwer='cd ~prozomat/prozoserwer'

g++gtest() {
g++ -std=c++11 $1 -lgtest -lpthread && ./a.out
}

# Links all .o files to make elf_i386 executable
link() {
    # Default value = test
    BIN=${1:-test};
    ld -m elf_i386 -s -o $BIN *.o 
}
# GCC flags:
# -fverbose-asm -S

compile() {
    nasm -f elf $1
}

alias burn_iso='wodim'

# Recursive chmod
chmod_rec() {
    # find . -type d -exec chmod +rx {} \;
    find . -type d -exec chmod $1 {} \;
}

alias make='make -j 4'
alias gitresettoremote='git fetch origin ; git reset --hard origin/master'
alias rmp='rm ~/Pictures/Screenshot*'
alias i3wmreset='i3-msg "reload"'

# Check if port is open:
alias checkopenports='netstat -ano|grep 443|grep LISTEN'

updateall() {
    echo "Updating packages"
    sudo apt-get update &> /dev/null
    echo "Upgrading packages"
    sudo apt-get upgrade -y &> /dev/null
    echo "Autoremoving packages"
    sudo apt-get autoremove &> /dev/null
    echo "Updating Vim plugins"
    vim +BundleUpdate +qall
    exit
}

pythontools=(2to3 pylint pyflakes autopep8)

alias classdiagram='staruml'
alias weather='curl http://wttr.in/Warsaw'

alias uwb='ssh a.rosciszewski@login.uco.uwb.edu.pl -p 9022'

alias tmuxhelp='cat ~/dotfiles/tmux.cheat | less'

alias sshprozacopy='ssh prozomat@213.135.59.214'

alias entropy='cat /proc/sys/kernel/random/entropy_avail'

alias dns_list_all='dig +nocmd yourdomain.com any +multiline +noall +answer'
alias install_ycm='~/.vim/bundle/YouCompleteMe/install.py --clang-completer  --gocode-completer'
alias switchm="xrandr --output VGA1 --left-of DP2" # switches monitors (left-right)

alias di='sudo dnf install -y'
alias ds='dnf search -C'
alias dr='sudo dnf remove'

# function ppgrep() { pgrep "$@" | xargs --no-run-if-empty ps fp; }
function ppgrep() { \pgrep "$@" -a | egrep --color "[0-9]"; }

function rdp() { rdesktop "$@" -rsound:remote -5 -K -r clipboard:CLIPBOARD; }

function swap()         
{
    local TMPFILE=tmp.$$
    mv "$1" $TMPFILE
    mv "$2" "$1"
    mv $TMPFILE "$2"
}

# Copies SSH RSA key to X clipboard
alias copykey='cat ~/.ssh/id_rsa.pub | xsel -i -b'

if command_exists vimx; then
    alias vim='vimx'
fi

# Gitignore.io support
function gitignore() { curl -L -s https://www.gitignore.io/api/$@ ;}

function dnfs() {
    arg_count = "$#"
    if [ arg_count -eq 2 ]; then
        dnf search $1 | grep $2
    elif [ arg_count -eq 1 ]; then
        dnf search $1
    fi
}

alias cups='lpstat' # -p -d

alias zsh_debug='zsh -i -x -c exit'

function fix_zsh_history() {
    cd $HOME > /dev/null
    mv .zsh_history .zsh_history_bad 
    strings .zsh_history_bad > .zsh_history
    fc -R .zsh_history
}

function fix_perms() {
    find . -type d -exec chmod 775 {} \;
    find . -type f -exec chmod 664 {} \;
}

function get_ip() {
    host $1 | awk '/has address/ { print $4 }' | head -n 1
}

# Query Linux man page for certain flag
# Example: manf iptables -t
# TODO: Fix for bash
function manf() {
    man $1 | less -p "^ +\-${2}"
}

alias rs='xfreerdp /kbd:0x415 /multimon +fonts /d:ger +clipboard +aero /home-drive /audio-mode:1 /v:GKSRDS007 /monitors:2'

alias dmidecode='sudo dmidecode'
alias ipconfig='ifconfig'

# Delete all containers & all images
function dockerrmall() {
    docker rm $(docker ps -a -q) && docker rmi $(docker images -q)
}

function list_installed() {
    dnf list installed | awk -F. -v ORS="\0" '{print $1" "}' | sort -zu && echo ""
}

# $1 - name of the folder to zip
function zip_and_move() {
    zip -r ~/Downloads/$1.zip $1/* $1/.*
}

# Download .gitignore
# Usage: gi language
function gi() { 
    curl -L -s https://www.gitignore.io/api/$@ | head -n -2 | tail -n +5 | tee .gitignore;
}
